{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport './App.css'; //import img from './plus.svg';\n\nimport SearchPage from './SearchPage'; //import { relative } from 'path';\n\nimport Playlist from './Playlist';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      songs: []\n    };\n    _this.addSong = _this.addSong.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"addSong\",\n    value: function addSong() {\n      var RandomNumber = Math.floor(Math.random() * 100 + 1);\n      var newSong = {\n        name: 'Bohemian Rhapsody',\n        rank: '1.',\n        artist: 'Queen',\n        number: RandomNumber\n      };\n      var newarr = this.state.songs;\n      newarr.push(newSong);\n      this.setState({\n        songs: newarr\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(\"App Page\");\n      console.log(this.props);\n      return __jsx(\"div\", null, __jsx(Playlist, {\n        addSong: this.addSong,\n        songs: this.state.songs\n      }), __jsx(SearchPage, {\n        user: this.props.user,\n        addSong: this.addSong\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:/Users/joshu/Documents/GitHub/next-multify/component/App.js"],"names":["React","Component","SearchPage","Playlist","App","props","state","songs","addSong","bind","RandomNumber","Math","floor","random","newSong","name","rank","artist","number","newarr","push","setState","console","log","user"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,WAAP,C,CACA;;AACA,OAAOC,UAAP,MAAuB,cAAvB,C,CACA;;AACA,OAAOC,QAAP,MAAqB,YAArB;;IAGQC,G;;;;;AAEJ,eAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,6EAAMA,KAAN;AACA,UAAKC,KAAL,GAAW;AACPC,MAAAA,KAAK,EAAE;AADA,KAAX;AAIA,UAAKC,OAAL,GAAe,MAAKA,OAAL,CAAaC,IAAb,+BAAf;AANgB;AAOnB;;;;8BAEW;AACR,UAAIC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,GAAd,GAAkB,CAA7B,CAAnB;AACA,UAAIC,OAAO,GAAC;AACRC,QAAAA,IAAI,EAAE,mBADE;AAERC,QAAAA,IAAI,EAAE,IAFE;AAGRC,QAAAA,MAAM,EAAE,OAHA;AAIRC,QAAAA,MAAM,EAAER;AAJA,OAAZ;AAMA,UAAIS,MAAM,GAAG,KAAKb,KAAL,CAAWC,KAAxB;AACAY,MAAAA,MAAM,CAACC,IAAP,CAAYN,OAAZ;AACA,WAAKO,QAAL,CAAc;AACVd,QAAAA,KAAK,EAAGY;AADE,OAAd;AAGH;;;6BAGU;AAEPG,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKlB,KAAjB;AACA,aACA,mBACJ,MAAC,QAAD;AAAU,QAAA,OAAO,EAAE,KAAKG,OAAxB;AAAiC,QAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC;AAAnD,QADI,EAEJ,MAAC,UAAD;AAAY,QAAA,IAAI,EAAE,KAAKF,KAAL,CAAWmB,IAA7B;AAAmC,QAAA,OAAO,EAAE,KAAKhB;AAAjD,QAFI,CADA;AAMD;;;;EArCeP,S;;AA0CpB,eAAeG,GAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport './App.css';\r\n//import img from './plus.svg';\r\nimport SearchPage from './SearchPage';\r\n//import { relative } from 'path';\r\nimport Playlist from './Playlist';\r\n\r\n\r\n  class App extends Component {\r\n\r\n    constructor(props){\r\n      super(props)\r\n      this.state={\r\n          songs: []\r\n\r\n      }\r\n      this.addSong = this.addSong.bind(this)\r\n  } \r\n\r\n    addSong() {\r\n      let RandomNumber = Math.floor(Math.random()*100+1);\r\n      let newSong={\r\n          name: 'Bohemian Rhapsody',\r\n          rank: '1.',\r\n          artist: 'Queen',\r\n          number: RandomNumber, \r\n      };\r\n      let newarr = this.state.songs\r\n      newarr.push(newSong)\r\n      this.setState({\r\n          songs : newarr\r\n      })\r\n  }\r\n\r\n\r\n    render() {\r\n\r\n      console.log(\"App Page\")\r\n      console.log(this.props)\r\n      return (\r\n      <div>\r\n  <Playlist addSong={this.addSong} songs={this.state.songs}/>\r\n  <SearchPage user={this.props.user} addSong={this.addSong}/>\r\n          </div>\r\n      );\r\n    }\r\n  }\r\n\r\n\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}